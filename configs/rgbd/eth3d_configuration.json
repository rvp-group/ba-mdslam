"SparseBlockLinearSolverCholeskyCSparse"{
  "#id": 1
}

"LoopValidator"{
  "#id": 2,
  "name": "validator",
  // if not set to -1, 0 for pinhole projection, 1 for spherical projection
  "camera_type": 0,
  // max reprojection error when evaluating best fitting model
  "max_reprojection_error": 6,
  // min num inliers after RANSAC validation
  "min_num_inliers": 6,
  // min number of correspondences to use with SVD ICP and RANSAC
  "min_ransac_correspondences": 6,
  // min number of correspondences to use with SVD ICP and RANSAC
  "ransac_rounds": 498
}

"LoopDetectorHBST"{
  "#id": 3,
  "name": "hbst",
  // enables matches container filtering based on the match score
  "enable_matches_filtering": 1,
  // frame interspace to consider a match
  "frame_interspace": 10,
  // maximum distance (Hamming) between descriptors
  "max_descriptor_distance": 23,
  // minimum ratio between the number of framepoints in the query and in the match
  "minimum_matching_ratio": 0.0157
}

"SimpleTerminationCriteria"{
  "#id": 4,
  // ratio of decay of chi2 between iteration
  "epsilon": 0.00100000005
}

"SimpleTerminationCriteria"{
  "#id": 5,
  // ratio of decay of chi2 between iteration
  "epsilon": 9.99999975e-06
}

"SimpleTerminationCriteria"{
  "#id": 6,
  // ratio of decay of chi2 between iteration
  "epsilon": 9.99999975e-06
}

"MessageROSBagSource"{
  "#id": 7,
  "name": "source",
  // file to read
  "filename": "my_bag.bag",
  "topics": [
    "/rgbd/image_depth",
    "/rgbd/image_rgb",
    "/rgbd/camera_info",
    "/tf_static",
    "/rgbd/imu"
  ],
  // verbose
  "verbose": 0
}

"IterationAlgorithmGN"{
  "#id": 8,
  // damping factor, the higher the closer to gradient descend. Default:0
  "damping": 1
}

"Solver"{
  "#id": 9,
  "name": "solver_pgo",
  "actions": [],
  // pointer to the optimization algorithm (GN/LM or others)
  "algorithm": {
    "#pointer": 10
  },
  // pointer to linear solver used to compute Hx=b
  "linear_solver": {
    "#pointer": 11
  },
  "max_iterations": [
    10
  ],
  // Minimum mean square error variation to perform global optimization
  "mse_threshold": -1,
  "robustifier_policies": [],
  // term criteria ptr, if 0 solver will do max iterations
  "termination_criteria": {
    "#pointer": 4
  },
  // turn it off to make the world a better place
  "verbose": 0
}

"SparseBlockLinearSolverCholmodFull"{
  "#id": 11
}


"IterationAlgorithmLM"{
  "#id": 13,
  // max lm iterations [default: 10]
  "lm_iterations_max": 10,
  // upper clamp for lambda if things go well
  "step_high": 0.666666985,
  // lower clamp for lambda if things go well 
  "step_low": 0.333333343,
  // scale factor for the lambda computed by the system, do not influence the one provided by the user [default: 1e-5]
  "tau": 9.99999975e-06,
  // initial lm lambda, if 0 is computed by system [default: 0]
  "user_lambda_init": 0,
  // set to true uses lambda*diag(H), otherwise uses lambda*I [default: true]
  "variable_damping": 1
}

"Solver"{
  "#id": 14,
  "name": "photometric_solver",
  "actions": [
    {
      "#pointer": 15
    },
    {
      "#pointer": 16
    }
  ],
  // pointer to the optimization algorithm (GN/LM or others)
  "algorithm": {
    "#pointer": 8
  },
  // pointer to linear solver used to compute Hx=b
  "linear_solver": {
    "#pointer": 17
  },
  "max_iterations": [
    10,
    20,
    50
  ],
  // Minimum mean square error variation to perform global optimization
  "mse_threshold": -1,
  "robustifier_policies": [],
  // term criteria ptr, if 0 solver will do max iterations
  "termination_criteria": {
    "#pointer": -1
  },
  // turn it off to make the world a better place
  "verbose": 0
}

"Solver"{
  "#id": 18,
  "name": "photometric_solver_closures",
  "actions": [],
  // pointer to the optimization algorithm (GN/LM or others)
  "algorithm": {
    "#pointer": 13
  },
  // pointer to linear solver used to compute Hx=b
  "linear_solver": {
    "#pointer": 19
  },
  "max_iterations": [
    10,
    20,
    50
  ],
  // Minimum mean square error variation to perform global optimization
  "mse_threshold": -1,
  "robustifier_policies": [],
  // term criteria ptr, if 0 solver will do max iterations
  "termination_criteria": {
    "#pointer": 6
  },
  // turn it off to make the world a better place
  "verbose": 0
}

"MDCloser"{
  "#id": 20,
  "name": "closer",
  // loop detector to detect loop, for now only HBST
  "loop_det": {
    "#pointer": 3
  },
  // loop validator to perform geometric verification
  "loop_validator": {
    "#pointer": 2
  },
  // neighboorood search radius for non max suppresion
  "nms_radius": 2
}

"MDNormalComputator2DCrossProduct"{
  "#id": 21,
  "name": "normcomp",
  // col gap for computing cross product
  "col_gap": 3,
  // row gap for computing cross product
  "row_gap": 3,
  // squared max distance between points to compute the normal
  "squared_max_distance": 0.2
}

"SparseBlockLinearSolverLDL"{
  "#id": 17
}

"MDTrackerViewer"{
  "#id": 22,
  "name": "viewer_clouds",
  "push_sinks": [],
  // tracker status
  "status_topic": "/md_tracker_status",
  // name of the transform tree to subscribe to
  "tf_topic": "",
  // coordinates resolution
  "voxelize_coord_res": 0.00999999978,
  // when to voxelize
  "voxelize_interval": 10,
  // normal resolution
  "voxelize_normal_res": 0
}

"MDPairwiseAligner"{
  "#id": 23,
  "name": "pairwise_aligner_closures",
  // points with a depth error higher than this are rejected
  "depth_rejection_threshold": 0.2426,
  // above this chi2, kernel acts
  "kernel_chi_threshold": 2.935,
  // omega for the depth cue
  "omega_depth": 1.2310,
  // omega for the intensity cue
  "omega_intensity": 0.5712,
  // omega for the normal cue
  "omega_normal": 1.1069,
  // solver running photometric alignment
  "solver": {
    "#pointer": 18
  }
}

"MDPairwiseAligner"{
  "#id": 24,
  "name": "pairwise_aligner",
  // points with a depth error higher than this are rejected
  "depth_rejection_threshold": 0.136,
  // above this chi2, kernel acts
  "kernel_chi_threshold": 4,
  // omega for the depth cue
  "omega_depth": 0.999,
  // omega for the intensity cue
  "omega_intensity": 0.351,
  // omega for the normal cue
  "omega_normal": 0.970,
  // solver running photometric alignment
  "solver": {
    "#pointer": 14
  }
}

"MessageSynchronizedSink"{
  "#id": 25,
  // name of the frame in the message pack
  "output_frame_id": "pack_frame_id",
  // name of the topic in the message pack
  "output_topic": "/pack",
  "push_sinks": [
    {
      "#pointer": 26
    }
  ],
  // name of the transform tree to subscribe to
  "tf_topic": "",
  // interval for the messages to be sinchronized
  "time_interval": 0.10000000000000001,
  "topics": [
    "/rgbd/image_depth",
    "/rgbd/image_rgb",
    "/rgbd/camera_info"
  ]
}

"PipelineRunner"{
  "#id": 27,
  "name": "runner",
  "push_sinks": [
    {
      "#pointer": 28
    }
  ],
  // the source of the pipeline
  "source": {
    "#pointer": 7
  },
  // name of the transform tree to subscribe to
  "tf_topic": ""
}

"MDFactorShowAction"{
  "#id": 15,
  "name": "mostraligner",
  // event to which react
  "event": 3,
  // priority of the event, higher is 0
  "priority": 0
}

"SparseBlockLinearSolverCholeskyCSparse"{
  "#id": 19
}

"MessageSortedSink"{
  "#id": 28,
  "name": "sink",
  // messages older than this lag that will be blasted, no matta what
  "oblivion_interval": 5,
  "push_sinks": [
    {
      "#pointer": 25
    },
    {
      "#pointer": 29
    }
  ],
  // name of the transform tree to subscribe to
  "tf_topic": "",
  // lag time to sort messages
  "time_interval": 1,
  // if set prints crap
  "verbose": 0
}

"MDPyramidGenerator"{
  "#id": 26,
  "name": "pyrgen",
  // set true blur adaptevely based on depth value
  "adaptive_blur": 0,
  // base_link_of_the_robot
  "base_frame_id": "/rgbd_imu",
  // if not set to -1, overrides the type of the camera to selected value
  "cam_type_override": 0,
  // topic where the camera info is broadcasted
  "camera_info_topic": "/rgbd/camera_info",
  // applies a pre-scaling to the image cols
  "col_prescaling": 1,
  // todo
  "depth_derivative_threshold": 0.8435,
  // filter policy for Depth {0 Ignore, 1 Suppress, 2 Clamp}
  "depth_policy": 1,
  // if not set to a negative value, overrides the depth scale in camera info
  "depth_scale_override": 0.000199999995,
  // topic for the depth image, registered to the intensity channel
  "depth_topic": "/rgbd/image_depth",
  // todo
  "intensity_derivative_threshold": 30,
  // filter policy for Intensity {0 Ignore, 1 Suppress, 2 Clamp}
  "intensity_policy": 0,
  // topic for the depth image, registered to the intensity channel
  "intensity_topic": "/rgbd/image_rgb",
  // radius to grow invalid mask
  "mask_grow_radius": 1,
  // max depth to consider while generating pyramids
  "max_depth": 3.911,
  // min depth to consider while generating pyramids
  "min_depth": 0.296,
  // algorithm to compute the normals
  "normal_computator": {
    "#pointer": 21
  },
  // window size for normals blurring
  "normals_blur_region_size": 3,
  // todo
  "normals_derivative_threshold": 0.476,
  // filter policy for Normals {0 Ignore, 1 Suppress, 2 Clamp}
  "normals_policy": 0,
  // normal blurring factor
  "normals_scaled_blur_multiplier": 1,
  "push_sinks": [
    {
      "#pointer": 22
    },
    {
      "#pointer": 30
    },
    {
      "#pointer": 29
    }
  ],
  // topic of the pyramid to generate
  "pyramid_output_topic": "/md_pyramid",
  // radius factor impacting bilinear filtering for depth smoothing
  "radius_factor": 2,
  // applies a pre-scaling to the image rows
  "row_prescaling": 1,
  "scales": [
    2,
    4,
    8
  ],
  // name of the transform tree to subscribe to
  "tf_topic": ""
}

"SolverPreemptAction"{
  "#id": 16,
  // event to which react
  "event": 3,
  // priority of the event, higher is 0
  "priority": 1
}

"SolverVerboseAction"{
  "#id": 31,
  // event to which react
  "event": 3,
  // priority of the event, higher is 0
  "priority": 2
}

"MDGraphManager"{
  "#id": 30,
  "name": "graph_manager",
  // enable closures
  "enable_closures": 1,
  // map frame id of the graph
  "map_frame_id": "/md_map",
  // closer manager for md
  "closer": {
    "#pointer": 20
  },
  // photometric pairwise aligner, takes 2 pyramids gives you a pose
  "pairwise_aligner": {
    "#pointer": 23
  },
  "push_sinks": [],
  // pose-graph solver
  "solver": {
    "#pointer": 9
  },
  // tracker status
  "status_topic": "/md_tracker_status",
  // topic where to push the dynamic transforms
  "tf_dyn_topic": "/tf",
  // name of the transform tree to subscribe to
  "tf_topic": "",
  "angle_check": 0.8022,
  "translation_check": 0.0979
}

"MDTrackerStandalone"{
  "#id": 29,
  "name": "tracker",
  // base_link_of_the_robot
  "base_frame_id": "/base_link",
  // if set to true enable imu in tracking
  "enable_imu": 0,
  // pose of current keyframe in md map origin
  "keyframe_frame_id": "/md_keyframe",
  // rotations above this, change keyframe
  "keyframe_rotation": 0.1277,
  // how many frames between keyframes
  "keyframe_steps": 10,
  // translations above this, change keyframe
  "keyframe_translation": 0.1499,
  // pose of current frame in keyframe
  "local_frame_id": "/md_local",
  // md_origin_frame_id
  "origin_frame_id": "/md_origin",
  // photometric pairwise aligner, takes 2 pyramids gives you a pose
  "pairwise_aligner": {
    "#pointer": 24
  },
  "push_sinks": [
    {
      "#pointer": 22
    },
    {
      "#pointer": 30
    }
  ],
  // topic of the pyramid to listen
  "pyramid_topic": "/md_pyramid",
  // topic where to push the dynamic transforms
  "tf_dyn_topic": "/tf",
  // name of the transform tree to subscribe to
  "tf_topic": ""
}

"IterationAlgorithmGN"{
  "#id": 10,
  "name": "pgo_solver",
  // damping factor, the higher the closer to gradient descend. Default:0
  "damping": 1
}
